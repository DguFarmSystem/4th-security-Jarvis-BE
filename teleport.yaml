#
# A Sample Teleport configuration file.
#
# Things to update:
#  1. license.pem: Retrieve a license from your Teleport account https://teleport.sh
#     if you are an Enterprise customer.
#
version: v3
teleport:
  nodename: 26dc41c9ca07
  data_dir: /var/lib/teleport
  join_params:
    token_name: ""
    method: token
  log:
    output: stderr
    severity: INFO
    format:
      output: text
  ca_pin: ""
  diag_addr: ""
auth_service:
  enabled: "yes"
  listen_addr: 0.0.0.0:3025
  proxy_listener_mode: multiplex
  public_addr: "openswdev.duckdns.org:3080"
  cluster_name: "openswdev.duckdns.org"
  authentication:
    type: local
ssh_service:
  enabled: "no"
proxy_service:
  enabled: "yes"
  public_addr: openswdev.duckdns.org:3080
  https_keypairs:
    - cert_file: /etc/letsencrypt/live/openswdev.duckdns.org/fullchain.pem
      key_file: /etc/letsencrypt/live/openswdev.duckdns.org/privkey.pem

  https_keypairs_reload_interval: 0s
  acme: {}
app_service:
  enabled: true
  apps:
    - name: grafana
      uri: "http://grafana:3333"
      labels:
        env: "test"
    - name: "my-backend-api"
      # 1. 외부에서 접속할 공개 주소를 추가합니다.
      public_addr: "openswdev-api.duckdns.org"
      # 2. 내부 uri는 Go 앱이 실행되는 주소로 지정합니다.
      #    Teleport와 Go 앱이 같은 서버에 있으므로 localhost 사용이 가능합니다.
      uri: "http://172.17.0.1:8080"
            # [핵심] 헤더 주입(꼬리표 붙이기) 규칙입니다.
      rewrite:
        headers:
          # "Teleport-Username" 이라는 이름의 헤더를 추가하고,
          # 그 값으로 로그인한 사용자의 이름을 넣습니다. (예: Teleport-Username: comet)
          - name: "Teleport-Username"
            value: "{{internal.user.name}}"

          # "Teleport-Roles" 라는 이름의 헤더를 추가하고,
          # 그 값으로 사용자의 역할 목록을 쉼표로 구분하여 넣습니다. (예: Teleport-Roles: editor,access)
          - name: "Teleport-Roles"
            value: "{{internal.user.roles}}"
          # 테스트용 헤드
          - name: "test"
            value: "Hello world"
db_service:
  enabled: "yes"
  databases:
  - name: "example-mysql"
    protocol: "mysql"
    uri: "test-database:3306"
